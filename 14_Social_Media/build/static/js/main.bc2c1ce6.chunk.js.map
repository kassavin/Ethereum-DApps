{"version":3,"sources":["drizzleOptions.js","LoadingContainer.js","TweetList.js","utils.js","AllTweets.js","MyTweets.js","NewTweet.js","Navbar.js","App.js","index.js"],"names":["options","contracts","useDrizzleState","drizzleReactHooks","LoadingContainer","children","state","drizzleStatus","initialized","tweets","className","map","tweet","key","id","authorName","style","fontSize","authorAddress","dateTimestamp","createdAt","Date","parseInt","toLocaleString","content","useDrizzle","ContractData","newContextComponents","drizzle","drizzleState","contract","method","methodArgs","render","TweetList","accounts","ContractForm","navigation","location","useLocation","isActive","route","pathname","to","type","data-toggle","data-target","Drizzle","drizzleOptions","DrizzleProvider","App","Navbar","exact","path","component","AllTweets","MyTweets","NewTweet","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bc2c1ce6.chunk.js","sourcesContent":["import Tweeter from './contracts/Tweeter.json';\n\nconst options = {\n  contracts: [Tweeter],\n};\n\nexport default options;\n","import React from \"react\";\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\n\nconst { useDrizzleState } = drizzleReactHooks;\n\nfunction LoadingContainer({children}) {\n  const drizzleStatus = useDrizzleState(state => state.drizzleStatus);\n  if(drizzleStatus.initialized === false) {\n    return \"Loading ...\";\n  }\n  return (\n    <>\n      {children}\n    </>\n  )\n}\n\nexport default LoadingContainer;\n","import React from \"react\";\nimport { toDate } from './utils';\n\nexport default ({ tweets }) => (\n  <div className=\"list-group\">\n    {tweets.map(tweet => (\n      <div key={tweet.id} className=\"list-group-item list-group-item-action\">\n        <div className=\"d-flex w-100 justify-content-between\">\n          <h5 className=\"mb-1\">\n            {tweet.authorName} \n            <span style={{fontSize: '0.8em'}}> ({tweet.authorAddress})</span>\n          </h5>\n          <small>{toDate(tweet.createdAt)}</small>\n        </div>\n        <p className=\"mb-1\">{tweet.content}</p>\n      </div>\n    ))}\n  </div>\n);\n","const toDate = dateTimestamp => (new Date(parseInt(dateTimestamp) * 1000)).toLocaleString();\n\nexport { toDate };\n","import React from \"react\";\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\nimport TweetList from \"./TweetList\";\n\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\nconst { ContractData } = newContextComponents;\n\nexport default () => {\n  const { drizzle } = useDrizzle();\n  const state = useDrizzleState(state => state);\n\n  return (\n    <>\n      <div>\n        <h3>All tweets</h3>\n        <ContractData\n          drizzle={drizzle}\n          drizzleState={state}\n          contract=\"Tweeter\"\n          method=\"getLatestTweets\"\n          methodArgs={[10]}\n          render={tweets => <TweetList tweets={tweets} />}\n        />\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\nimport TweetList from \"./TweetList\";\n\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\nconst { ContractData } = newContextComponents;\n\nexport default () => {\n  const { drizzle } = useDrizzle();\n  const state = useDrizzleState(state => state);\n\n  return (\n    <>\n      <div>\n        <h3>My Tweets</h3>\n        <ContractData\n          drizzle={drizzle}\n          drizzleState={state}\n          contract=\"Tweeter\"\n          method=\"getTweetsOf\"\n          methodArgs={[state.accounts[0], 3]}\n          render={tweets => <TweetList tweets={tweets} />}\n        />\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\n\nconst { useDrizzle } = drizzleReactHooks;\nconst { ContractForm } = newContextComponents;\n\nexport default () => {\n  const { drizzle } = useDrizzle();\n\n  return (\n    <>\n      <div>\n        <h3>New tweet</h3>\n        <ContractForm\n          drizzle={drizzle}\n          contract=\"Tweeter\"\n          method=\"tweet\"\n        />\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nexport default ( { navigation } ) => {\n  const location = useLocation();\n\n  const isActive = route =>\n    location.pathname === route ? 'active' : '';\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">Decentralized Tweeter</Link>\n      <button \n        className=\"navbar-toggler\" \n        type=\"button\" \n        data-toggle=\"collapse\" \n        data-target=\"#navbarSupportedContent\" \n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className={`nav-item ${isActive('/')}`}>\n            <Link className=\"nav-link\" to=\"/\">Home</Link>\n          </li>\n          <li className={`nav-item ${isActive('/my-tweets')}`}>\n            <Link className=\"nav-link\" to=\"/my-tweets\">My Tweets</Link>\n          </li>\n          <li className={`nav-item ${isActive('/new-tweet')}`}>\n            <Link className=\"nav-link\" to=\"/new-tweet\">Tweet</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n\n  );\n}\n","import React from \"react\";\nimport { Drizzle } from '@drizzle/store';\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport drizzleOptions from \"./drizzleOptions\";\nimport LoadingContainer from './LoadingContainer.js';\nimport AllTweets from './AllTweets.js';\nimport MyTweets from './MyTweets.js';\nimport NewTweet from './NewTweet.js';\nimport Navbar from './Navbar.js';\n\nconst drizzle = new Drizzle(drizzleOptions);\nconst { DrizzleProvider } = drizzleReactHooks;\n\nfunction App() {\n  return (\n    <Router>\n      <DrizzleProvider drizzle={drizzle}>\n        <LoadingContainer>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <Navbar />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <Switch>\n                  <Route exact path=\"/\" component={AllTweets} />\n                  <Route path=\"/my-tweets\" component={MyTweets} />\n                  <Route path=\"/new-tweet\" component={NewTweet} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </LoadingContainer>\n      </DrizzleProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}