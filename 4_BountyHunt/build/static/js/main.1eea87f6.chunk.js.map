{"version":3,"sources":["utils/getWeb3.js","App.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","process","providers","HttpProvider","stop","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","accounts","networkId","deployedNetwork","instance","sent","eth","getAccounts","net","getId","DAppContract","networks","Contract","abi","address","setState","DAppInstance","account","assertThisInitialized","alert","state","undefined","bountyAmount","bountyData","bountyDeadline","bounties","handleIssueBounty","bind","handleChange","component","events","BountyIssued","fromBlock","toBlock","on","event","newBountiesArray","push","returnValues","target","name","value","preventDefault","methods","issueBounty","send","from","utils","toWei","react_default","createElement","className","Grid_default","Row_default","Panel_default","Heading","Form_default","onSubmit","FormGroup_default","controlId","FormControl_default","required","componentClass","placeholder","onChange","HelpBlock_default","type","Button_default","BootstrapTable_default","data","TableHeaderColumn_default","isKey","dataField","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1eea87f6.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        console.log(process.env.PUBLIC_URL)\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport DAppContract from \"./contracts/DApp.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nimport BootstrapTable from 'react-bootstrap-table/lib/BootstrapTable';\nimport TableHeaderColumn from 'react-bootstrap-table/lib/TableHeaderColumn';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\n\nimport Button from 'react-bootstrap/lib/Button';\n\nimport Form from 'react-bootstrap/lib/Form';\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\nimport FormControl from 'react-bootstrap/lib/FormControl';\nimport HelpBlock from 'react-bootstrap/lib/HelpBlock';\nimport Grid from 'react-bootstrap/lib/Grid';\nimport Row from 'react-bootstrap/lib/Row';\nimport Panel from 'react-bootstrap/lib/Panel';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      DAppInstance: undefined,\n      bountyAmount: undefined,\n      bountyData: undefined,\n      bountyDeadline: undefined,\n      bounties: [],\n      account: null,\n      web3: null\n    }\n\n    this.handleIssueBounty = this.handleIssueBounty.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();    \n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = DAppContract.networks[networkId];\n      const instance = new web3.eth.Contract(DAppContract.abi, deployedNetwork && deployedNetwork.address);\n\n      this.setState({ DAppInstance: instance, web3: web3, account: accounts[0]})\n      this.addEventListener(this)\n\n      } catch (error) { alert(`Please connect to the Rinkeby Test Network.`) }\n  };\n\n  addEventListener(component) {\n\n    this.state.DAppInstance.events.BountyIssued({fromBlock: 0, toBlock: 'latest'}).on('data', function(event){ \n      var newBountiesArray = component.state.bounties\n      newBountiesArray.push(event.returnValues)\n      component.setState({ bounties: newBountiesArray })\n    })\n  }\n\n  handleChange(event) {\n\n    switch(event.target.name) {\n        case \"bountyData\":\n            this.setState({\"bountyData\": event.target.value})\n            break;\n        case \"bountyDeadline\":\n            this.setState({\"bountyDeadline\": event.target.value})\n            break;\n        case \"bountyAmount\":\n            this.setState({\"bountyAmount\": event.target.value})\n            break;\n        default:\n            break;\n    }\n  }\n\n  async handleIssueBounty(event) {\n    if (typeof this.state.DAppInstance !== 'undefined') {\n      event.preventDefault();\n      await this.state.DAppInstance.methods.issueBounty(this.state.bountyData,this.state.bountyDeadline).send({from: this.state.account, value: this.state.web3.utils.toWei(this.state.bountyAmount, 'ether')})\n    }\n  }\n\n  render() {\n\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n\n    return (\n\n      <div className=\"App\">   \n      <br/>\n      <Grid>\n\n      <Row>\n      <Panel>\n          <Panel.Heading>Issue Bounty</Panel.Heading>\n\n      <Form onSubmit={this.handleIssueBounty}>\n          <FormGroup controlId=\"fromCreateBounty\">\n\n            <FormControl\n              required\n              componentClass=\"textarea\"\n              name=\"bountyData\"\n              value={this.state.bountyData}\n              placeholder=\"Enter bounty details\"\n              onChange={this.handleChange}\n            />\n\n            <HelpBlock>Enter bounty data</HelpBlock><br/>\n\n            <FormControl\n              required\n              type=\"text\"\n              name=\"bountyDeadline\"\n              value={this.state.bountyDeadline}\n              placeholder=\"Enter bounty deadline (e.g. 1609459200 )\"\n              onChange={this.handleChange}\n            />\n\n            <HelpBlock>Enter bounty deadline in seconds since epoch (Ref: 01/01/2021 is 1609459200 )</HelpBlock><br/>\n\n            <FormControl\n              required\n              type=\"text\"\n              name=\"bountyAmount\"\n              value={this.state.bountyAmount}\n              placeholder=\"Enter bounty amount (e.g. 0.05)\"\n              onChange={this.handleChange}\n            />\n\n            <HelpBlock> Enter bounty amount in ether (Ref: 1 wei is 0.000000000000000001 ether)</HelpBlock><br/>\n\n            <Button type=\"submit\">Issue Bounty</Button>\n\n          </FormGroup>\n      </Form>\n\n      </Panel>\n      </Row>\n      \n      <Row>\n      <Panel>\n          <Panel.Heading>Issued Bounties</Panel.Heading>\n      \n      <BootstrapTable data={this.state.bounties}>\n\n        <TableHeaderColumn isKey dataField='bounty_id'>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='issuer'>Issuer</TableHeaderColumn>\n        <TableHeaderColumn dataField='amount'>Amount (wei)</TableHeaderColumn>\n        <TableHeaderColumn dataField='data'>Bounty Data</TableHeaderColumn>\n\n      </BootstrapTable>\n\n      </Panel>\n      </Row>\n\n      </Grid>\n      </div>\n\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}