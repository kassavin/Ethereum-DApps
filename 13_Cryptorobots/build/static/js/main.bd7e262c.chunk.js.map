{"version":3,"sources":["drizzleOptions.js","LoadingContainer.js","KittyList.js","Catalogue.js","Player.js","Admin.js","App.js","index.js"],"names":["options","contracts","useDrizzleState","drizzleReactHooks","LoadingContainer","children","state","drizzleStatus","initialized","kitties","uriBase","map","kitty","key","id","generation","geneA","geneB","style","width","height","src","alt","useDrizzle","ContractData","newContextComponents","drizzle","className","drizzleState","contract","method","render","KittyList","ContractForm","methodArgs","accounts","useState","isAdmin","setIsAdmin","useEffect","a","Cryptokitty","methods","admin","call","toLowerCase","init","Drizzle","drizzleOptions","DrizzleProvider","App","Catalogue","Player","Admin","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bd7e262c.chunk.js","sourcesContent":["// Assign Contract Name & declare Location.\nimport Cryptokitty from './contracts/Cryptokitty.json';\n\n// List the Contract Names.\nconst options = { contracts: [Cryptokitty] };\n\nexport default options;\n","// Standard Code\nimport React from \"react\";\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\n\nconst { useDrizzleState } = drizzleReactHooks;\n\nfunction LoadingContainer({children}) {\n\n  const drizzleStatus = useDrizzleState(state => state.drizzleStatus);\n\n  if(drizzleStatus.initialized === false) {\n    return \"Please connect to the Rinkeby Network\";\n  }\n\n  return ( <> {children} </> )\n  \t\n}\n\nexport default LoadingContainer;","import React from \"react\";\n\nexport default ({ kitties, uriBase }) => (\n\n  <table>\n\n\n    <thead>\n      <th>Id</th>\n      <th>Generation</th>\n      <th>Gene A</th>\n      <th>Gene B</th>\n      <th>Picc</th>\n    </thead>\n\n\n    <tbody>\n\n      {kitties.map(kitty => (\n\n        <tr key={kitty.id}>\n\n          <td>{kitty.id}</td>\n          <td>{kitty.generation}</td>\n          <td>{kitty.geneA}</td>\n          <td>{kitty.geneB}</td>\n          <td>  <img style={{width: \"50px\", height: \"50px\"}}   src={`${uriBase}/${kitty.id}`}  alt={\"\"}  />  </td>\n        </tr>\n\n      ))}\n\n    </tbody>\n\n  </table>\n  \n);\n","// Standard Code\nimport React from \"react\";\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\n\n// Import required files\nimport KittyList from \"./KittyList\";\n\n// Standard Code\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\nconst { ContractData } = newContextComponents;\n\nexport default () => {\n  const { drizzle } = useDrizzle();\n  const state = useDrizzleState(state => state);\n\n  return (\n\n    <div className=\"App\">\n\n    {/*Change from here*/}\n      \n      <div>\n        <h2>Catalogue</h2>\n        \n        <ContractData\n          drizzle={drizzle}\n          drizzleState={state}\n          contract=\"Cryptokitty\"\n          method=\"tokenURIBase\"\n          \n          render={uriBase => { \n            \n            return (\n\n              <ContractData\n                drizzle={drizzle}\n                drizzleState={state}\n                contract=\"Cryptokitty\"\n                method=\"getAllKitties\"\n                \n                render={kitties => (\n                  <KittyList \n                    kitties={kitties} \n                    uriBase={uriBase} /> \n                )}\n\n              />\n            );\n\n          }}\n\n        />\n\n      </div>\n\n    </div>\n    \n  );\n\n};\n","// Standard Code\nimport React from \"react\";\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\n\n// Import required files\nimport KittyList from \"./KittyList\";\n\n// Standard Code\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\nconst { ContractForm, ContractData } = newContextComponents;\n\nexport default () => {\n\n  const { drizzle } = useDrizzle();\n  const state = useDrizzleState(state => state);\n\n  return (\n\n    <div className=\"App\">\n\n      {/*Change from here*/}\n\n      <div>\n        <h2>Breed</h2>\n\n        <ContractForm\n          drizzle={drizzle}\n          contract=\"Cryptokitty\"\n          method=\"breed\" />\n\n      </div>\n\n\n      <div>\n        <h2>Player Kitties</h2>\n\n        <ContractData\n          drizzle={drizzle}\n          drizzleState={state}\n          contract=\"Cryptokitty\"\n          method=\"tokenURIBase\"\n          \n          render={uriBase => {\n            \n            return (\n              \n              <ContractData\n                drizzle={drizzle}\n                drizzleState={state}\n                contract=\"Cryptokitty\"\n                method=\"getAllKittiesOf\"\n                methodArgs={[state.accounts[0]]}\n                \n                render={kitties => (\n                  \n                  <KittyList \n                    kitties={kitties} \n                    uriBase={uriBase} /> \n                )}\n\n              />\n\n            );\n\n          }}\n\n        />\n\n      </div>\n\n    </div>\n\n  );\n  \n};\n","// Standard Code\n\nimport React, { useState, useEffect } from \"react\";\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\nimport { newContextComponents } from \"@drizzle/react-components\";\n\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\nconst { ContractForm } = newContextComponents;\n\n// Displays Admin content.\n\nexport default () => {\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const { drizzle } = useDrizzle();\n  const state = useDrizzleState(state => state);\n\n  useEffect(() => {\n    const init = async () => {\n      const admin = await drizzle.contracts.Cryptokitty.methods.admin().call();\n      setIsAdmin(admin.toLowerCase() === state.accounts[0].toLowerCase());\n    }\n    init();\n  });\n\n  if(!isAdmin) {\n    return null;\n  }\n\n  return (\n\n    <div className=\"App\">\n\n    {/*Change from here*/}\n    \n      <div>\n        <h2>Mint</h2>\n\n        <ContractForm\n          drizzle={drizzle}\n          contract=\"Cryptokitty\"\n          method=\"mint\" />\n\n      </div>\n\n\n    </div>\n  );\n};\n","// Standard Code\n\nimport React from \"react\";\nimport { Drizzle } from '@drizzle/store';\nimport { drizzleReactHooks } from \"@drizzle/react-plugin\";\n\n// Import required files\n\nimport drizzleOptions from \"./drizzleOptions\";\nimport LoadingContainer from './LoadingContainer.js';\nimport Catalogue from './Catalogue.js';\nimport Player from './Player.js';\nimport Admin from './Admin.js';\n\n// Standard Code\n\nconst drizzle = new Drizzle(drizzleOptions);\nconst { DrizzleProvider } = drizzleReactHooks;\n\nfunction App() {\n\n  return (\n\n    <div className=\"container\">\n\n     {/*Change the title*/}\n\n      <h1>Cryptokitty</h1>\n             <hr/>\n\n      <DrizzleProvider drizzle={drizzle}>\n\n        <LoadingContainer>\n\n         {/*Change the file name*/}\n\n          <Catalogue />\n          <Player />\n          <Admin />\n\n        </LoadingContainer>\n\n      </DrizzleProvider>\n\n    </div>\n\n  );\n  \n}\n\nexport default App;\n","// Standard Code\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}